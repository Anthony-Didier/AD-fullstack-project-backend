package com.example.demo;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
@CrossOrigin(origins = "http://localhost:4200")
public class UserController {
	// This means to get the beans called userRepository and userTypeRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	@Autowired
	private UserRepository userRepository;
	
	@PostMapping("/users")
	@ResponseBody
	void addUser(@RequestBody User user) {
		userRepository.save(user);
	}
	
	@GetMapping("/users")
	public @ResponseBody List<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return (List<User>) userRepository.findAll();
	}
	
	@GetMapping("users/{id}")
    public @ResponseBody Optional<User> getUserById(@PathVariable int id) {
        return userRepository.findById(id);
    }
	
	@PutMapping("users/{id}")
	public @ResponseBody User updateUser(@RequestBody final User updatedUser) {
		return userRepository.save(updatedUser);
	}
	
	@DeleteMapping("users/{id}")
	public @ResponseBody HttpStatus deleteUser(@PathVariable final int id) {
		userRepository.deleteById(id);
		return HttpStatus.OK;
	}
}